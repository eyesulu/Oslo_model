This folder contains following files:    - Oslo_model_optmised.py: A python file containing the Oslo class    - saving_data.py: A python file containing a routine to create      L = 4, 8, 16, 32, 64, 128, 256 Oslo models and drive them       600,000 times. The recurrent configurations are definitely       reached after 100,000 added grains.     - Task_functions.py: A python file containing all functions to       perform certain tasks specified in Project Notes    - logbin.py: A python file containing a procedure to logbin      data    - Data_files: A folder containing 7 csv files generated in       saving_data.py      Prior to executing functions that complete the tasks,run all python files.       Oslo_model_optimised.py:Contains following functions:    - Initialisation of the Oslo model given its size L    - Getting threshold slope values for each site as a list    - Relax routine which checks if any sites need to be relaxed      and relaxes relevant sites    - Drive routine which adds a grain to the left-most site    - Start routine which drives the model and relaxes sites    - Initialise routine which forces the system to get into       steady state    - Getting heights given number of grains that need to be added    - Animation of the Oslo model    Task_functions.py:Each task specified in Project Notes is defined in this file.For example, to complete Task 2a, run Task_2a() in terminal.Most tasks require csv files generated in saving_data.py file.Below is the list of Figures used in the Project Report and thecorresponding functions that generate them:    Figure 1A : Test_1()    Figure 1B : Test_2()    Figure 2A : Task_2a()    Figure 2B : Task_2a_1()    Figure 3  : Task_2a_1config()    Figure 4  : Task_2b()    Figure 5A : Task_2d()    Figure 5B : Task_2d()     Figure 6A : Task_2e_2()    Figure 6B : Task_2e()    Figure 7A : Task_2f_2()    Figure 7B : Task_2f_3()    Figure 8A : Task_2g_2()    Figure 8B : Task_2g_2()    Figure 9  : Task_2g_3()    Figure 10A: Task_3aa()    Figure 10B: Task_3a()    Figure 11A: Task_3a_2()    Figure 11B: Task_3a_22()    Figure 12A: Task_3a_31()    Figure 12B: Task_3a_3()    Figure 13A: k_slopes, k_errors = Task_3b()    Figure 13B: Task_3b_2(k_slopes)                                                                    